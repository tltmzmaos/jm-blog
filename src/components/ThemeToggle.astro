---
---

<button
  id="theme-toggle"
  class="p-2 rounded-lg bg-gray-100 dark:bg-dark-muted hover:bg-gray-200 dark:hover:bg-dark-surface transition-colors focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 min-h-[44px] min-w-[44px] flex items-center justify-center"
  aria-label="다크 모드로 전환"
  title="테마 변경"
  type="button"
>
  <svg 
    id="theme-toggle-dark-icon" 
    class="hidden w-5 h-5 text-gray-700 dark:text-gray-300" 
    fill="currentColor" 
    viewBox="0 0 20 20" 
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
  <svg 
    id="theme-toggle-light-icon" 
    class="hidden w-5 h-5 text-gray-700 dark:text-gray-300" 
    fill="currentColor" 
    viewBox="0 0 20 20" 
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true"
  >
    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
  </svg>
  <span class="sr-only" id="theme-status">현재 테마: 라이트 모드</span>
</button>

<script>
  // DOM이 로드된 후 실행
  document.addEventListener('DOMContentLoaded', function() {
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

    // 현재 테마에 따라 아이콘 표시
    function updateThemeIcon() {
      const isDark = document.documentElement.classList.contains('dark');
      const themeStatus = document.getElementById('theme-status');
      
      if (isDark) {
        themeToggleLightIcon?.classList.remove('hidden');
        themeToggleDarkIcon?.classList.add('hidden');
        themeToggleBtn?.setAttribute('aria-label', '라이트 모드로 전환');
        if (themeStatus) themeStatus.textContent = '현재 테마: 다크 모드';
      } else {
        themeToggleLightIcon?.classList.add('hidden');
        themeToggleDarkIcon?.classList.remove('hidden');
        themeToggleBtn?.setAttribute('aria-label', '다크 모드로 전환');
        if (themeStatus) themeStatus.textContent = '현재 테마: 라이트 모드';
      }
    }

    // 초기 아이콘 설정
    updateThemeIcon();

    // 테마 토글 이벤트
    themeToggleBtn?.addEventListener('click', function() {
      // 부드러운 전환을 위한 클래스 추가
      document.documentElement.style.transition = 'background-color 0.3s ease, color 0.3s ease';
      
      const isDark = document.documentElement.classList.contains('dark');
      
      if (isDark) {
        document.documentElement.classList.remove('dark');
        document.documentElement.style.colorScheme = 'light';
        localStorage.setItem('theme', 'light');
      } else {
        document.documentElement.classList.add('dark');
        document.documentElement.style.colorScheme = 'dark';
        localStorage.setItem('theme', 'dark');
      }
      
      updateThemeIcon();
      
      // 전환 완료 후 transition 제거
      setTimeout(() => {
        document.documentElement.style.transition = '';
      }, 300);
    });
    
    // 키보드 접근성: Enter와 Space 키 지원
    themeToggleBtn?.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        themeToggleBtn.click();
      }
    });
  });
</script>