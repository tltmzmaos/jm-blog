---
import { type CollectionEntry, getCollection } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, headings } = await post.render();

// 이전/다음 포스트 찾기
const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const currentIndex = sortedPosts.findIndex(p => p.slug === post.slug);

const prevPost = currentIndex < sortedPosts.length - 1 ? {
  slug: sortedPosts[currentIndex + 1].slug,
  title: sortedPosts[currentIndex + 1].data.title,
  description: sortedPosts[currentIndex + 1].data.description
} : undefined;

const nextPost = currentIndex > 0 ? {
  slug: sortedPosts[currentIndex - 1].slug,
  title: sortedPosts[currentIndex - 1].data.title,
  description: sortedPosts[currentIndex - 1].data.description
} : undefined;

---

<PostLayout 
  frontmatter={post.data}
  headings={headings}
  prevPost={prevPost}
  nextPost={nextPost}
  content={post.body}
>
  <Content />
</PostLayout>

