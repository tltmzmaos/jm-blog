---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';

const allPosts = await getCollection('blog');
const publishedPosts = allPosts.filter(post => !post.data.draft);

// 태그별 포스트 수 계산
const tagCounts = publishedPosts.reduce((acc, post) => {
  post.data.tags.forEach(tag => {
    acc[tag] = (acc[tag] || 0) + 1;
  });
  return acc;
}, {} as Record<string, number>);

const sortedTags = Object.entries(tagCounts)
  .sort(([,a], [,b]) => b - a)
  .map(([tag, count]) => ({ tag, count }));
---

<BaseLayout title="태그 - 벨로그 스타일 블로그" description="모든 태그를 확인해보세요.">
  <Header />
  
  <main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- 페이지 헤더 -->
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-dark-text mb-4">
        Tags
      </h1>
      <p class="text-gray-600 dark:text-dark-subtext">
        {sortedTags.length} tags in total.
      </p>
    </div>

    <!-- 태그 클라우드 -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">
      {sortedTags.map(({ tag, count }) => (
        <a 
          href={`/tags/${tag}`}
          class="block p-4 bg-white dark:bg-dark-surface rounded-lg border border-gray-200 dark:border-dark-border hover:shadow-md hover:border-primary-300 dark:hover:border-dark-accent transition-all duration-200"
        >
          <div class="flex items-center justify-between">
            <span class="text-lg font-medium text-gray-900 dark:text-dark-text">
              {tag}
            </span>
            <span class="px-2 py-1 text-sm bg-primary-100 dark:bg-dark-accent/20 text-primary-800 dark:text-dark-accent rounded-full">
              {count}
            </span>
          </div>
        </a>
      ))}
    </div>

    {sortedTags.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-500 dark:text-dark-subtext">No tags yet.</p>
      </div>
    )}
  </main>
</BaseLayout>